name: Bazel Targets Scan

on:
  pull_request:
  push:
    branches: [main]

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      go_binaries: ${{ steps.go-binaries.outputs.go_binaries }}
    steps:
      - name: Checkout PR Code
        uses: actions/checkout@v4
        with:
          path: pr
      
      - name: Checkout Base Branch
        uses: actions/checkout@v4
        with:
          ref: master
          path: base
        
      - name: Set up Bazel
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true

      - name: Install bazel-diff
        run: |
          curl -Lo bazel-diff.jar https://github.com/Tinder/bazel-diff/releases/latest/download/bazel-diff_deploy.jar
          java -jar bazel-diff.jar -h
      
      - name: Bazel-diff Generate Hashes For PR
        run: |
          java -jar bazel-diff.jar generate-hashes --workspacePath pr --bazelPath $(which bazel) final-hashes.json

      - name: Bazel-diff Generate Hashes For Base
        run: |
          java -jar bazel-diff.jar generate-hashes --workspacePath base --bazelPath $(which bazel) starting-hashes.json

      - name: Get Impacted Targets
        run: |
          java -jar bazel-diff.jar get-impacted-targets -sh starting-hashes.json -fh final-hashes.json -o impacted-targets
          cat impacted-targets
          
      - name: Filter for go_binary Targets
        id: go-binaries
        run: |
          cd pr
          impacted=$(cat ../impacted-targets)
          echo "$impacted" | xargs bazel query 'kind("go_binary", set(^$))' > ../go-binary.txt
          echo "Impacted Binary Targets"
          cat ../go-binary.txt
          # Convert to JSON for matrix
          go_binaries=$(sed '/^$/d; s/^/"/; s/$/"/' ../go-binary.txt | paste -sd, -)
          go_binaries="[$go_binaries]"
          echo "go_binaries=$go_binaries" >> $GITHUB_OUTPUT

  scan:
    needs: detect
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ${{ fromJson(needs.detect.outputs.go_binaries)}}
    steps:
      - name: Endor Scan Targets
        uses: endorlabs/github-action@main
        with: 
          namespace: 'kriti-learn'
          scan_dependencies: true
          pr: false
          scan_summary_output_type: 'table'
          path: pr
          additional_args: "--use-bazel --bazel-include-targets=${{ matrix.target }}"
